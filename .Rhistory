panel.grid.major =element_blank() ,
panel.grid.minor = element_blank(),
)
foo <- ggplot(fullmat,aes(IQ)) +
geom_density(col = "black",fill = "blue") +
transition_states(dataset,2,4) + shadow_mark(alpha = .3) +
geom_vline(xintercept= 50, linetype = "longdash", size = 1) +
geom_vline(xintercept= 90, linetype = "longdash", size = 1) +
geom_vline(xintercept= 70, linetype = "dotted", size = 0.75) +
thm
anim_save("foo.gif", foo)
![](foo.gif)
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "index.html")
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "index.html")
library(ggplot2)
library(gganimate)
t1 <- rnorm(1000,70,15)
t2 <- rnorm(1000,70,13)
t3 <- rnorm(1000,70,11)
print(t2)
t1 <- as.matrix(t1, nrows=1000, ncols=1)
t2 <- as.matrix(t2, nrows=1000, ncols=1)
t3 <- as.matrix(t3, nrows=1000, ncols=1)
t1 <- as.data.frame(t1)
t2 <- as.data.frame(t2)
t3 <- as.data.frame(t3)
colnames(t1) <- "IQ"
colnames(t2) <- "IQ"
colnames(t3) <- "IQ"
dataset <- c(rep(1,1000),rep(2,1000),rep(3,1000))
fullmat <- matrix(0,3000,2)
fullmat[,1] <- dataset
partmat <- rbind(t1,t2,t3)
fullmat[,2] <- partmat[,1]
colnames(fullmat) <- c("dataset","IQ")
fullmat <- as.data.frame(fullmat)
thm <- theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background = element_rect(fill = "f7fbf"),
panel.grid.major =element_blank() ,
panel.grid.minor = element_blank(),
)
lims <- data.frame(Ref = c("LCL", "T", "UCL"),
vals = c(50, 70, 90),
stringsAsFactors = FALSE)
foo <- ggplot(fullmat,aes(IQ)) +
geom_density(col = "black",fill = "blue") +
transition_states(dataset,2,4) + shadow_mark(alpha = .3) +
geom_vline(xintercept= 50, linetype = "longdash", size = 1) +
geom_vline(xintercept= 90, linetype = "longdash", size = 1) +
geom_vline(xintercept= 70, linetype = "dotted", size = 0.75) +
thm
foo
library(ggplot2)
library(gganimate)
t1 <- rnorm(1000,70,15)
t2 <- rnorm(1000,70,13)
t3 <- rnorm(1000,70,11)
print(t2)
t1 <- as.matrix(t1, nrows=1000, ncols=1)
t2 <- as.matrix(t2, nrows=1000, ncols=1)
t3 <- as.matrix(t3, nrows=1000, ncols=1)
t1 <- as.data.frame(t1)
t2 <- as.data.frame(t2)
t3 <- as.data.frame(t3)
colnames(t1) <- "IQ"
colnames(t2) <- "IQ"
colnames(t3) <- "IQ"
dataset <- c(rep(1,1000),rep(2,1000),rep(3,1000))
fullmat <- matrix(0,3000,2)
fullmat[,1] <- dataset
partmat <- rbind(t1,t2,t3)
fullmat[,2] <- partmat[,1]
colnames(fullmat) <- c("dataset","IQ")
fullmat <- as.data.frame(fullmat)
thm <- theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background = element_blank(),
panel.grid.major =element_blank() ,
panel.grid.minor = element_blank(),
)
lims <- data.frame(Ref = c("LCL", "T", "UCL"),
vals = c(50, 70, 90),
stringsAsFactors = FALSE)
foo <- ggplot(fullmat,aes(IQ)) +
geom_density(col = "black",fill = "blue") +
transition_states(dataset,2,4) + shadow_mark(alpha = .3) +
geom_vline(xintercept= 50, linetype = "longdash", size = 1) +
geom_vline(xintercept= 90, linetype = "longdash", size = 1) +
geom_vline(xintercept= 70, linetype = "dotted", size = 0.75) +
thm
foo
library(ggplot2)
library(gganimate)
t1 <- rnorm(1000,70,15)
t2 <- rnorm(1000,70,13)
t3 <- rnorm(1000,70,11)
print(t2)
t1 <- as.matrix(t1, nrows=1000, ncols=1)
t2 <- as.matrix(t2, nrows=1000, ncols=1)
t3 <- as.matrix(t3, nrows=1000, ncols=1)
t1 <- as.data.frame(t1)
t2 <- as.data.frame(t2)
t3 <- as.data.frame(t3)
colnames(t1) <- "IQ"
colnames(t2) <- "IQ"
colnames(t3) <- "IQ"
dataset <- c(rep(1,1000),rep(2,1000),rep(3,1000))
fullmat <- matrix(0,3000,2)
fullmat[,1] <- dataset
partmat <- rbind(t1,t2,t3)
fullmat[,2] <- partmat[,1]
colnames(fullmat) <- c("dataset","IQ")
fullmat <- as.data.frame(fullmat)
thm <- theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background = element_rect(fill = "f7fbff", colour = "f7fbff",size = 0.5, linetype = "solid"),
panel.grid.major =element_blank() ,
panel.grid.minor = element_blank(),
)
lims <- data.frame(Ref = c("LCL", "T", "UCL"),
vals = c(50, 70, 90),
stringsAsFactors = FALSE)
foo <- ggplot(fullmat,aes(IQ)) +
geom_density(col = "black",fill = "blue") +
transition_states(dataset,2,4) + shadow_mark(alpha = .3) +
geom_vline(xintercept= 50, linetype = "longdash", size = 1) +
geom_vline(xintercept= 90, linetype = "longdash", size = 1) +
geom_vline(xintercept= 70, linetype = "dotted", size = 0.75) +
thm
foo
warnings()
library(ggplot2)
library(gganimate)
t1 <- rnorm(1000,70,15)
t2 <- rnorm(1000,70,13)
t3 <- rnorm(1000,70,11)
print(t2)
t1 <- as.matrix(t1, nrows=1000, ncols=1)
t2 <- as.matrix(t2, nrows=1000, ncols=1)
t3 <- as.matrix(t3, nrows=1000, ncols=1)
t1 <- as.data.frame(t1)
t2 <- as.data.frame(t2)
t3 <- as.data.frame(t3)
colnames(t1) <- "IQ"
colnames(t2) <- "IQ"
colnames(t3) <- "IQ"
dataset <- c(rep(1,1000),rep(2,1000),rep(3,1000))
fullmat <- matrix(0,3000,2)
fullmat[,1] <- dataset
partmat <- rbind(t1,t2,t3)
fullmat[,2] <- partmat[,1]
colnames(fullmat) <- c("dataset","IQ")
fullmat <- as.data.frame(fullmat)
thm <- theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background = element_rect(fill = "#f7fbff", colour = "#f7fbff",size = 0.5, linetype = "solid"),
panel.grid.major =element_blank() ,
panel.grid.minor = element_blank(),
)
lims <- data.frame(Ref = c("LCL", "T", "UCL"),
vals = c(50, 70, 90),
stringsAsFactors = FALSE)
foo <- ggplot(fullmat,aes(IQ)) +
geom_density(col = "black",fill = "blue") +
transition_states(dataset,2,4) + shadow_mark(alpha = .3) +
geom_vline(xintercept= 50, linetype = "longdash", size = 1) +
geom_vline(xintercept= 90, linetype = "longdash", size = 1) +
geom_vline(xintercept= 70, linetype = "dotted", size = 0.75) +
thm
foo
#anim_save("foo.gif", foo)
library(ggplot2)
library(gganimate)
t1 <- rnorm(1000,70,15)
t2 <- rnorm(1000,70,13)
t3 <- rnorm(1000,70,11)
print(t2)
t1 <- as.matrix(t1, nrows=1000, ncols=1)
t2 <- as.matrix(t2, nrows=1000, ncols=1)
t3 <- as.matrix(t3, nrows=1000, ncols=1)
t1 <- as.data.frame(t1)
t2 <- as.data.frame(t2)
t3 <- as.data.frame(t3)
colnames(t1) <- "IQ"
colnames(t2) <- "IQ"
colnames(t3) <- "IQ"
dataset <- c(rep(1,1000),rep(2,1000),rep(3,1000))
fullmat <- matrix(0,3000,2)
fullmat[,1] <- dataset
partmat <- rbind(t1,t2,t3)
fullmat[,2] <- partmat[,1]
colnames(fullmat) <- c("dataset","IQ")
fullmat <- as.data.frame(fullmat)
thm <- theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background = element_rect(fill = "#f7fbff"),
panel.grid.major =element_blank() ,
panel.grid.minor = element_blank(),
)
lims <- data.frame(Ref = c("LCL", "T", "UCL"),
vals = c(50, 70, 90),
stringsAsFactors = FALSE)
foo <- ggplot(fullmat,aes(IQ)) +
geom_density(col = "black",fill = "blue") +
transition_states(dataset,2,4) + shadow_mark(alpha = .3) +
geom_vline(xintercept= 50, linetype = "longdash", size = 1) +
geom_vline(xintercept= 90, linetype = "longdash", size = 1) +
geom_vline(xintercept= 70, linetype = "dotted", size = 0.75) +
thm
foo
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "index.html")
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "index.html")
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "index.html")
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "index.html")
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "index.html")
library(ggplot2)
library(gganimate)
t1 <- rnorm(1000,70,20)
t2 <- rnorm(1000,70,13)
t3 <- rnorm(1000,70,11)
print(t2)
t1 <- as.matrix(t1, nrows=1000, ncols=1)
t2 <- as.matrix(t2, nrows=1000, ncols=1)
t3 <- as.matrix(t3, nrows=1000, ncols=1)
t1 <- as.data.frame(t1)
t2 <- as.data.frame(t2)
t3 <- as.data.frame(t3)
colnames(t1) <- "IQ"
colnames(t2) <- "IQ"
colnames(t3) <- "IQ"
dataset <- c(rep(1,1000),rep(2,1000),rep(3,1000))
fullmat <- matrix(0,3000,2)
fullmat[,1] <- dataset
partmat <- rbind(t1,t2,t3)
fullmat[,2] <- partmat[,1]
colnames(fullmat) <- c("dataset","IQ")
fullmat <- as.data.frame(fullmat)
thm <- theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background = element_rect(fill = "#f7fbff"),
panel.grid.major =element_blank() ,
panel.grid.minor = element_blank(),
)
lims <- data.frame(Ref = c("LCL", "T", "UCL"),
vals = c(50, 70, 90),
stringsAsFactors = FALSE)
foo <- ggplot(fullmat,aes(IQ)) +
geom_density(col = "black",fill = "blue") +
transition_states(dataset,2,4) + shadow_mark(alpha = .3) +
geom_vline(xintercept= 50, linetype = "longdash", size = 1) +
geom_vline(xintercept= 90, linetype = "longdash", size = 1) +
geom_vline(xintercept= 70, linetype = "dotted", size = 0.75) +
thm
foo
library(ggplot2)
library(gganimate)
t1 <- rnorm(1000,70,15)
t2 <- rnorm(1000,70,13)
t3 <- rnorm(1000,70,9)
print(t2)
t1 <- as.matrix(t1, nrows=1000, ncols=1)
t2 <- as.matrix(t2, nrows=1000, ncols=1)
t3 <- as.matrix(t3, nrows=1000, ncols=1)
t1 <- as.data.frame(t1)
t2 <- as.data.frame(t2)
t3 <- as.data.frame(t3)
colnames(t1) <- "IQ"
colnames(t2) <- "IQ"
colnames(t3) <- "IQ"
dataset <- c(rep(1,1000),rep(2,1000),rep(3,1000))
fullmat <- matrix(0,3000,2)
fullmat[,1] <- dataset
partmat <- rbind(t1,t2,t3)
fullmat[,2] <- partmat[,1]
colnames(fullmat) <- c("dataset","IQ")
fullmat <- as.data.frame(fullmat)
thm <- theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background = element_rect(fill = "#f7fbff"),
panel.grid.major =element_blank() ,
panel.grid.minor = element_blank(),
)
lims <- data.frame(Ref = c("LCL", "T", "UCL"),
vals = c(50, 70, 90),
stringsAsFactors = FALSE)
foo <- ggplot(fullmat,aes(IQ)) +
geom_density(col = "black",fill = "blue") +
transition_states(dataset,2,4) + shadow_mark(alpha = .3) +
geom_vline(xintercept= 50, linetype = "longdash", size = 1) +
geom_vline(xintercept= 90, linetype = "longdash", size = 1) +
geom_vline(xintercept= 70, linetype = "dotted", size = 0.75) +
thm
foo
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "index.html")
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "index.html")
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "index.html")
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "index.html")
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "index.html")
library(ggplot2)
library(gganimate)
t1 <- rnorm(1000,70,30)
t2 <- rnorm(1000,70,13)
t3 <- rnorm(1000,70,9)
print(t2)
t1 <- as.matrix(t1, nrows=1000, ncols=1)
t2 <- as.matrix(t2, nrows=1000, ncols=1)
t3 <- as.matrix(t3, nrows=1000, ncols=1)
t1 <- as.data.frame(t1)
t2 <- as.data.frame(t2)
t3 <- as.data.frame(t3)
colnames(t1) <- "IQ"
colnames(t2) <- "IQ"
colnames(t3) <- "IQ"
dataset <- c(rep(1,1000),rep(2,1000),rep(3,1000))
fullmat <- matrix(0,3000,2)
fullmat[,1] <- dataset
partmat <- rbind(t1,t2,t3)
fullmat[,2] <- partmat[,1]
colnames(fullmat) <- c("dataset","IQ")
fullmat <- as.data.frame(fullmat)
thm <- theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background = element_rect(fill = "#f7fbff"),
panel.grid.major =element_blank() ,
panel.grid.minor = element_blank(),
)
lims <- data.frame(Ref = c("LCL", "T", "UCL"),
vals = c(50, 70, 90),
stringsAsFactors = FALSE)
foo <- ggplot(fullmat,aes(IQ)) +
geom_density(col = "black",fill = "blue") +
transition_states(dataset,2,4) + shadow_mark(alpha = .3) +
geom_vline(xintercept= 50, linetype = "longdash", size = 1) +
geom_vline(xintercept= 90, linetype = "longdash", size = 1) +
geom_vline(xintercept= 70, linetype = "dotted", size = 0.75) +
thm
foo
library(ggplot2)
library(gganimate)
t1 <- rnorm(1000,70,25)
t2 <- rnorm(1000,70,13)
t3 <- rnorm(1000,70,10)
print(t2)
t1 <- as.matrix(t1, nrows=1000, ncols=1)
t2 <- as.matrix(t2, nrows=1000, ncols=1)
t3 <- as.matrix(t3, nrows=1000, ncols=1)
t1 <- as.data.frame(t1)
t2 <- as.data.frame(t2)
t3 <- as.data.frame(t3)
colnames(t1) <- "IQ"
colnames(t2) <- "IQ"
colnames(t3) <- "IQ"
dataset <- c(rep(1,1000),rep(2,1000),rep(3,1000))
fullmat <- matrix(0,3000,2)
fullmat[,1] <- dataset
partmat <- rbind(t1,t2,t3)
fullmat[,2] <- partmat[,1]
colnames(fullmat) <- c("dataset","IQ")
fullmat <- as.data.frame(fullmat)
thm <- theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background = element_rect(fill = "#f7fbff"),
panel.grid.major =element_blank() ,
panel.grid.minor = element_blank(),
)
lims <- data.frame(Ref = c("LCL", "T", "UCL"),
vals = c(50, 70, 90),
stringsAsFactors = FALSE)
foo <- ggplot(fullmat,aes(IQ)) +
geom_density(col = "black",fill = "blue") +
transition_states(dataset,2,4) + shadow_mark(alpha = .3) +
geom_vline(xintercept= 50, linetype = "longdash", size = 1) +
geom_vline(xintercept= 90, linetype = "longdash", size = 1) +
geom_vline(xintercept= 70, linetype = "dotted", size = 0.75) +
thm
foo
#anim_save("foo.gif", foo)
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "index.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(tmp_dir = getwd(), ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "Ahmedcv.pdf")
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "index.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(tmp_dir = getwd(), ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "Ahmedcv.pdf")
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "Ahmedcv.pdf")
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "index.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "Ahmedcv.pdf")
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "Ahmedcv.pdf")
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "index.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "Ahmedcv.pdf")
